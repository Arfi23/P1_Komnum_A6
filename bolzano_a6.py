# -*- coding: utf-8 -*-
"""Bolzano_A6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q6hGV35LWVUTKVV8kcytNYqwH_5hwaJT
"""

import math
import matplotlib.pyplot as plt
import numpy as np

myarray = []
myarray2 = []
def f(x): 
  return x**3 + 11*x**2 - 16*x - 320
y = []
x1 = []

def bolzano(xL,xU,xTrue,error): 
  i = 1
  xR = 0
  condition = True 
  while condition:
    a = f(xL)
    b = f(xU)
    g = f(xR)
    temp=float(xR)
    xR = (xL+xU)/2
    if f(xR)<0:
      xL = xR
    else: 
      xU = xR
    if i==1:
      ea=0
      et=abs((xTrue-xR)/xTrue)*100
    else:
      et=abs((xTrue-xR)/xTrue)*100
      ea=abs((xR-temp)/xR)*100
    print("iteration = ", i, "|| xR = ", xR,"|| f(xL) = ",a,"|| f(xU) = ",b, "|| f(xR) = ", f(xR), "|| et = ",et,"|| ea = ",ea)
    myarray.append(xR)
    myarray2.append(f(xR))

    i = i + 1
    condition = abs(f(xR)-g)>error    
  
xL = input("xLower : ")
xU = input("xUpper : ")
xTrue = input("x sebenarnya : ")
error = 0.000001
xL = float(xL)
xU = float(xU)
xTrue = float(xTrue)
error = float(error)

if f(xL)*f(xU)>0:
   print("syarat dari f(xL) x f(xU) < 0 belum terpenuhi")
   print("masukkan ulang nilai")
else: 
   bolzano(xL,xU,xTrue,error)

xx = np.array(myarray)
yy = np.array(myarray2)

plt.title("Grafik Bolzano")
plt.plot(xx, yy, color="red")
